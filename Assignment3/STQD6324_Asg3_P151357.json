{"paragraphs":[{"text":"%sh\r\nwget http://media.sundog-soft.com/hadoop/ml-100k/u.user -O /tmp/u.user\r\nwget http://media.sundog-soft.com/hadoop/ml-100k/u.data -O /tmp/u.data\r\nwget http://media.sundog-soft.com/hadoop/ml-100k/u.item -O /tmp/u.item\r\necho \"Downloaded ml-100k dataset!\"","user":"anonymous","dateUpdated":"2025-06-18T07:32:37+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"sh","editOnDblClick":false},"editorMode":"ace/mode/sh"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"--2025-06-18 07:32:37--  http://media.sundog-soft.com/hadoop/ml-100k/u.user\nResolving media.sundog-soft.com (media.sundog-soft.com)... 52.216.52.129, 52.217.201.89, 52.216.222.81, ...\nConnecting to media.sundog-soft.com (media.sundog-soft.com)|52.216.52.129|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 22628 (22K) [text/plain]\nSaving to: ‘/tmp/u.user\\r’\n\n     0K .......... .......... ..                              100% 87.6K=0.3s\n\n2025-06-18 07:32:39 (87.6 KB/s) - ‘/tmp/u.user\\r’ saved [22628/22628]\n\n--2025-06-18 07:32:39--  http://media.sundog-soft.com/hadoop/ml-100k/u.data\nResolving media.sundog-soft.com (media.sundog-soft.com)... 52.216.222.81, 3.5.10.204, 3.5.25.103, ...\nConnecting to media.sundog-soft.com (media.sundog-soft.com)|52.216.222.81|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 2079229 (2.0M) [application/octet-stream]\nSaving to: ‘/tmp/u.data\\r’\n\n     0K .......... .......... .......... .......... ..........  2% 97.4K 20s\n    50K .......... .......... .......... .......... ..........  4% 1.07M 11s\n   100K .......... .......... .......... .......... ..........  7%  234K 10s\n   150K .......... .......... .......... .......... ..........  9% 11.1M 7s\n   200K .......... .......... .......... .......... .......... 12%  200K 7s\n   250K .......... .......... .......... .......... .......... 14% 10.4M 6s\n   300K .......... .......... .......... .......... .......... 17% 11.9M 5s\n   350K .......... .......... .......... .......... .......... 19%  174K 5s\n   400K .......... .......... .......... .......... .......... 22% 12.3M 5s\n   450K .......... .......... .......... .......... .......... 24% 21.8M 4s\n   500K .......... .......... .......... .......... .......... 27% 41.1M 4s\n   550K .......... .......... .......... .......... .......... 29% 57.1M 3s\n   600K .......... .......... .......... .......... .......... 32%  217K 3s\n   650K .......... .......... .......... .......... .......... 34% 2.12M 3s\n   700K .......... .......... .......... .......... .......... 36% 11.3M 3s\n   750K .......... .......... .......... .......... .......... 39%  102K 3s\n   800K .......... .......... .......... .......... .......... 41% 37.8M 3s\n   850K .......... .......... .......... .......... .......... 44% 52.6M 3s\n   900K .......... .......... .......... .......... .......... 46% 69.1M 2s\n   950K .......... .......... .......... .......... .......... 49%  100M 2s\n  1000K .......... .......... .......... .......... .......... 51% 68.3M 2s\n  1050K .......... .......... .......... .......... .......... 54% 28.6M 2s\n  1100K .......... .......... .......... .......... .......... 56% 5.08M 2s\n  1150K .......... .......... .......... .......... .......... 59% 4.06M 1s\n  1200K .......... .......... .......... .......... .......... 61% 9.46M 1s\n  1250K .......... .......... .......... .......... .......... 64%  216K 1s\n  1300K .......... .......... .......... .......... .......... 66% 6.79M 1s\n  1350K .......... .......... .......... .......... .......... 68% 3.80M 1s\n  1400K .......... .......... .......... .......... .......... 71% 6.45M 1s\n  1450K .......... .......... .......... .......... .......... 73%  213K 1s\n  1500K .......... .......... .......... .......... .......... 76% 3.03M 1s\n  1550K .......... .......... .......... .......... .......... 78% 7.84M 1s\n  1600K .......... .......... .......... .......... .......... 81% 7.38M 1s\n  1650K .......... .......... .......... .......... .......... 83%  226K 1s\n  1700K .......... .......... .......... .......... .......... 86% 4.51M 0s\n  1750K .......... .......... .......... .......... .......... 88% 2.76M 0s\n  1800K .......... .......... .......... .......... .......... 91% 7.15M 0s\n  1850K .......... .......... .......... .......... .......... 93%  228K 0s\n  1900K .......... .......... .......... .......... .......... 96% 3.97M 0s\n  1950K .......... .......... .......... .......... .......... 98% 2.86M 0s\n  2000K .......... .......... ..........                      100% 4.39M=3.1s\n\n2025-06-18 07:32:43 (645 KB/s) - ‘/tmp/u.data\\r’ saved [2079229/2079229]\n\n--2025-06-18 07:32:43--  http://media.sundog-soft.com/hadoop/ml-100k/u.item\nResolving media.sundog-soft.com (media.sundog-soft.com)... 52.216.76.220, 52.217.45.132, 3.5.21.171, ...\nConnecting to media.sundog-soft.com (media.sundog-soft.com)|52.216.76.220|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 236344 (231K) [application/octet-stream]\nSaving to: ‘/tmp/u.item\\r’\n\n     0K .......... .......... .......... .......... .......... 21%  101K 2s\n    50K .......... .......... .......... .......... .......... 43% 1007K 1s\n   100K .......... .......... .......... .......... .......... 64%  247K 0s\n   150K .......... .......... .......... .......... .......... 86% 8.29M 0s\n   200K .......... .......... ..........                      100%  129K=1.0s\n\n2025-06-18 07:32:45 (232 KB/s) - ‘/tmp/u.item\\r’ saved [236344/236344]\n\nDownloaded ml-100k dataset!\n"}]},"apps":[],"jobName":"paragraph_1750221335093_-467083020","id":"20250618-043535_944084850","dateCreated":"2025-06-18T04:35:35+0000","dateStarted":"2025-06-18T07:32:37+0000","dateFinished":"2025-06-18T07:32:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2936"},{"text":"%md\r\nCreate RDD for Spark analysis","user":"anonymous","dateUpdated":"2025-06-18T08:55:14+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Create RDD for Spark analysis</p>\n"}]},"apps":[],"jobName":"paragraph_1750222483775_1202000915","id":"20250618-045443_1467942944","dateCreated":"2025-06-18T04:54:43+0000","dateStarted":"2025-06-18T08:55:14+0000","dateFinished":"2025-06-18T08:55:14+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2937"},{"text":"%md\r\nCreate Users RDD and DataFrame\r\nprint(spark.version)\r\n","user":"anonymous","dateUpdated":"2025-06-18T07:32:59+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Create Users RDD and DataFrame\n<br  />print(spark.version)</p>\n"}]},"apps":[],"jobName":"paragraph_1750223618919_1021757829","id":"20250618-051338_2048367885","dateCreated":"2025-06-18T05:13:38+0000","dateStarted":"2025-06-18T07:32:59+0000","dateFinished":"2025-06-18T07:32:59+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2938"},{"text":"%pyspark\n\nfrom pyspark.sql import Row\nfrom pyspark.sql import functions as F\n\n# ParseInput function\ndef parseInput(line):\n    fields = line.split('|')\n    return Row(user_id=int(fields[0]), age=int(fields[1]), gender=fields[2], occupation=fields[3], zip=fields[4])\n\n# Load raw user data from HDFS\nlines = spark.sparkContext.textFile(\"hdfs:///user/maria_dev/ml-100k/u.user\")\n\n# Apply transformation\nusers = lines.map(parseInput)\n\n# Create DataFrame\nusersDataset = spark.createDataFrame(users)\n\n# Write to Cassandra\nusersDataset.write \\\n    .format(\"org.apache.spark.sql.cassandra\") \\\n    .mode(\"append\") \\\n    .options(table=\"users\", keyspace=\"movielens\") \\\n    .save()\n\n# Read back from Cassandra\nreadUsers = spark.read \\\n    .format(\"org.apache.spark.sql.cassandra\") \\\n    .options(table=\"users\", keyspace=\"movielens\") \\\n    .load()\n\nreadUsers.show()\n","user":"anonymous","dateUpdated":"2025-06-18T08:49:16+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":true},"editorMode":"ace/mode/python","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+---+------+----------+-----+\n|user_id|age|gender|occupation|  zip|\n+-------+---+------+----------+-----+\n|    143| 42|     M|technician|08832|\n|    909| 50|     F|  educator|53171|\n|    468| 28|     M|  engineer|02341|\n|    583| 44|     M|  engineer|29631|\n|    403| 37|     M|     other|06811|\n|    546| 36|     M| executive|22911|\n|    771| 26|     M|   student|15232|\n|    618| 15|     F|   student|44212|\n|    411| 34|     M|  educator|44691|\n|    471| 10|     M|   student|77459|\n|    845| 64|     M|    doctor|97405|\n|    486| 39|     M|  educator|93101|\n|    288| 34|     M| marketing|23226|\n|    652| 35|     M|     other|22911|\n|    894| 47|     M|  educator|74075|\n|    533| 43|     M| librarian|02324|\n|    834| 26|     M|     other|64153|\n|     74| 39|     M| scientist|T8H1N|\n|    359| 22|     M|   student|61801|\n|    215| 35|     M|programmer|63033|\n+-------+---+------+----------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1750229371766_-1491638243","id":"20250618-064931_1270955222","dateCreated":"2025-06-18T06:49:31+0000","dateStarted":"2025-06-18T08:46:32+0000","dateFinished":"2025-06-18T08:48:38+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2939"},{"text":"%md\nCreate rating RDD and DataFrame\n\n\n","user":"anonymous","dateUpdated":"2025-06-18T09:49:01+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Create rating RDD and DataFrame</p>\n"}]},"apps":[],"jobName":"paragraph_1750229326454_1717106287","id":"20250618-064846_70107425","dateCreated":"2025-06-18T06:48:46+0000","dateStarted":"2025-06-18T09:49:01+0000","dateFinished":"2025-06-18T09:49:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2940"},{"text":"%pyspark\n\nfrom pyspark.sql import Row\nfrom pyspark.sql import functions as F\n\n# Extract user_id, movie_id, rating from each line using parse\ndef parseInput2(line):\n    fields = line.split('\\t')\n    return Row(user_id=int(fields[0]), movieid=int(fields[1]), rating=int(fields[2]))\n\n# get ratings data from HDFS\nlines = spark.sparkContext.textFile(\"hdfs:///tmp/ml-100k/u.data\")\n\n# Structure the raw data lines as Row elements\nratings = lines.map(parseInput2)\n\n# Create DataFrame based on ratings\nratingsDataset = spark.createDataFrame(ratings)\n\n# transfer to Cassandra\nratingsDataset.write \\\n    .format(\"org.apache.spark.sql.cassandra\") \\\n    .mode(\"append\") \\\n    .options(table=\"ratings\", keyspace=\"movielens\") \\\n    .save()\n\n# obtain (back) from Cassandra\nreadRatings = spark.read \\\n    .format(\"org.apache.spark.sql.cassandra\") \\\n    .options(table=\"ratings\", keyspace=\"movielens\") \\\n    .load()\n\n# Show the result\nreadRatings.show()\n","user":"anonymous","dateUpdated":"2025-06-18T09:05:19+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+-------+------+\n|user_id|movieid|rating|\n+-------+-------+------+\n|    143|    258|     3|\n|    143|    271|     4|\n|    143|    272|     4|\n|    143|    286|     2|\n|    143|    288|     5|\n|    143|    294|     3|\n|    143|    307|     4|\n|    143|    313|     5|\n|    143|    315|     4|\n|    143|    322|     4|\n|    143|    323|     3|\n|    143|    325|     5|\n|    143|    326|     5|\n|    143|    328|     4|\n|    143|    331|     5|\n|    143|    333|     5|\n|    143|    347|     5|\n|    143|    682|     3|\n|    143|    690|     2|\n|    143|   1038|     3|\n+-------+-------+------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1750230870885_-1798689768","id":"20250618-071430_476426655","dateCreated":"2025-06-18T07:14:30+0000","dateStarted":"2025-06-18T09:05:19+0000","dateFinished":"2025-06-18T09:05:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2941"},{"text":"%md\nCreate Movie RDD and DataFrame","user":"anonymous","dateUpdated":"2025-06-18T09:49:09+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<p>Create Movie RDD and DataFrame</p>\n"}]},"apps":[],"jobName":"paragraph_1750230903698_1903192294","id":"20250618-071503_997608820","dateCreated":"2025-06-18T07:15:03+0000","dateStarted":"2025-06-18T09:49:09+0000","dateFinished":"2025-06-18T09:49:09+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2942"},{"text":"%pyspark\r\n\r\nfrom pyspark.sql import Row\r\nfrom pyspark.sql import functions as F\r\n\r\n# Parse movie lines\r\ndef parse_movie(line):\r\n    fields = line.split('|')\r\n    return Row(\r\n        movieid=int(fields[0]),\r\n        title=fields[1],\r\n        unknown=int(fields[5]),\r\n        action=int(fields[6]),\r\n        adventure=int(fields[7]),\r\n        animation=int(fields[8]),\r\n        children=int(fields[9]),\r\n        comedy=int(fields[10]),\r\n        crime=int(fields[11]),\r\n        documentary=int(fields[12]),\r\n        drama=int(fields[13]),\r\n        fantasy=int(fields[14]),\r\n        filmnoir=int(fields[15]),\r\n        horror=int(fields[16]),\r\n        musical=int(fields[17]),\r\n        mystery=int(fields[18]),\r\n        romance=int(fields[19]),\r\n        scifi=int(fields[20]),\r\n        thriller=int(fields[21]),\r\n        war=int(fields[22]),\r\n        western=int(fields[23])\r\n    )\r\n\r\n# Extract u.item (movie data) from HDFS\r\nmovie_lines = spark.sparkContext.textFile(\"hdfs:///tmp/ml-100k/u.item\")\r\n\r\n# Apply parsing\r\nmovies = movie_lines.map(parse_movie)\r\n\r\n# Generate dataframe\r\nmovies_df = spark.createDataFrame(movies)\r\n\r\n# Upload to Cassandra\r\nmovies_df.write \\\r\n    .format(\"org.apache.spark.sql.cassandra\") \\\r\n    .mode(\"append\") \\\r\n    .options(table=\"titles\", keyspace=\"movielens\") \\\r\n    .save()\r\n\r\n# Extract back from Cassandra\r\nreadMovies = spark.read \\\r\n    .format(\"org.apache.spark.sql.cassandra\") \\\r\n    .options(table=\"titles\", keyspace=\"movielens\") \\\r\n    .load()\r\n\r\n# Show result\r\nreadMovies.show()\r\n","user":"anonymous","dateUpdated":"2025-06-18T09:11:05+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------+---------+---------+--------+------+-----+-----------+-----+-------+--------+------+-------+-------+-------+-----+--------+--------------------+-------+---+-------+\n|movieid|action|adventure|animation|children|comedy|crime|documentary|drama|fantasy|filmnoir|horror|musical|mystery|romance|scifi|thriller|               title|unknown|war|western|\n+-------+------+---------+---------+--------+------+-----+-----------+-----+-------+--------+------+-------+-------+-------+-----+--------+--------------------+-------+---+-------+\n|    143|     0|        0|        0|       0|     0|    0|          0|    0|      0|       0|     0|      1|      0|      0|    0|       0|Sound of Music, T...|      0|  0|      0|\n|    909|     0|        0|        0|       0|     0|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|Dangerous Beauty ...|      0|  0|      0|\n|    468|     0|        0|        0|       0|     0|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|         Rudy (1993)|      0|  0|      0|\n|    583|     0|        0|        0|       0|     0|    1|          0|    0|      0|       0|     0|      0|      0|      0|    0|       1|Romeo Is Bleeding...|      0|  0|      0|\n|   1189|     0|        0|        0|       0|     0|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|  Prefontaine (1997)|      0|  0|      0|\n|    403|     1|        1|        0|       0|     0|    1|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|       Batman (1989)|      0|  0|      0|\n|    546|     1|        0|        0|       0|     0|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       1| Broken Arrow (1996)|      0|  0|      0|\n|   1049|     0|        0|        0|       0|     1|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       0| House Arrest (1996)|      0|  0|      0|\n|   1327|     0|        0|        0|       0|     0|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|     Captives (1994)|      0|  0|      0|\n|    771|     1|        0|        0|       0|     0|    0|          0|    0|      0|       0|     0|      0|      0|      0|    1|       1|Johnny Mnemonic (...|      0|  0|      0|\n|    618|     0|        0|        0|       0|     0|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|       Picnic (1955)|      0|  0|      0|\n|    411|     0|        0|        0|       0|     1|    0|          0|    0|      1|       0|     0|      0|      0|      1|    1|       0|Nutty Professor, ...|      0|  0|      0|\n|    471|     0|        0|        0|       0|     0|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|Courage Under Fir...|      0|  1|      0|\n|   1125|     0|        0|        0|       0|     0|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       1|Innocents, The (1...|      0|  0|      0|\n|    845|     0|        0|        0|       0|     1|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       0|That Thing You Do...|      0|  0|      0|\n|    486|     0|        0|        0|       0|     1|    0|          0|    0|      0|       0|     0|      0|      0|      1|    0|       0|      Sabrina (1954)|      0|  0|      0|\n|   1045|     0|        0|        0|       0|     0|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|     Fearless (1993)|      0|  0|      0|\n|    288|     0|        0|        0|       0|     0|    0|          0|    0|      0|       0|     1|      0|      0|      0|    0|       1|       Scream (1996)|      0|  0|      0|\n|    652|     0|        0|        0|       0|     1|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|Rosencrantz and G...|      0|  0|      0|\n|   1101|     0|        0|        0|       0|     0|    0|          0|    1|      0|       0|     0|      0|      1|      0|    0|       0|Six Degrees of Se...|      0|  0|      0|\n+-------+------+---------+---------+--------+------+-----+-----------+-----+-------+--------+------+-------+-------+-------+-----+--------+--------------------+-------+---+-------+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1750230928401_691648656","id":"20250618-071528_772268710","dateCreated":"2025-06-18T07:15:28+0000","dateStarted":"2025-06-18T08:49:13+0000","dateFinished":"2025-06-18T08:49:15+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2943"},{"text":"%md\n### i) Calculate the average rating for each movie.","user":"anonymous","dateUpdated":"2025-06-18T09:46:52+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>i) Calculate the average rating for each movie.</h3>\n"}]},"apps":[],"jobName":"paragraph_1750230952883_159186827","id":"20250618-071552_729619113","dateCreated":"2025-06-18T07:15:52+0000","dateStarted":"2025-06-18T09:46:52+0000","dateFinished":"2025-06-18T09:46:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2944"},{"text":"%pyspark\r\n\r\nfrom pyspark.sql.functions import avg\r\n\r\n# Merge ratings and movie metadata on movieid\r\njoined_df = readRatings.join(readMovies, on=\"movieid\")\r\n\r\n# Combine by title and define by average rating\r\navg_ratings_df = joined_df.groupBy(\"title\").agg(avg(\"rating\").alias(\"avg_rating\"))\r\n\r\n# Order by average rating descending and get top 20\r\ntop_20_movies = avg_ratings_df.orderBy(\"avg_rating\", ascending=False).limit(20)\r\n\r\n# Show result\r\ntop_20_movies.show()\r\n","user":"anonymous","dateUpdated":"2025-06-18T09:13:22+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+-----------------+\n|               title|       avg_rating|\n+--------------------+-----------------+\n|Marlene Dietrich:...|              5.0|\n|Someone Else's Am...|              5.0|\n|     Star Kid (1997)|              5.0|\n|Aiqing wansui (1994)|              5.0|\n|They Made Me a Cr...|              5.0|\n|Santa with Muscle...|              5.0|\n|  Prefontaine (1997)|              5.0|\n|Saint of Fort Was...|              5.0|\n|Great Day in Harl...|              5.0|\n|Entertaining Ange...|              5.0|\n|Pather Panchali (...|            4.625|\n|      Everest (1998)|              4.5|\n|Maya Lin: A Stron...|              4.5|\n|         Anna (1996)|              4.5|\n|Some Mother's Son...|              4.5|\n|Close Shave, A (1...|4.491071428571429|\n|Schindler's List ...|4.466442953020135|\n|Wrong Trousers, T...|4.466101694915254|\n|   Casablanca (1942)| 4.45679012345679|\n|Wallace & Gromit:...|4.447761194029851|\n+--------------------+-----------------+\n\n"}]},"apps":[],"jobName":"paragraph_1750230984480_-1910900173","id":"20250618-071624_584874810","dateCreated":"2025-06-18T07:16:24+0000","dateStarted":"2025-06-18T08:49:42+0000","dateFinished":"2025-06-18T08:49:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2945"},{"text":"%md\n### ii) Identify the top ten movies with the highest average ratings.","user":"anonymous","dateUpdated":"2025-06-18T09:47:46+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>ii) Identify the top ten movies with the highest average ratings.</h3>\n"}]},"apps":[],"jobName":"paragraph_1750231117731_2111865760","id":"20250618-071837_1261771582","dateCreated":"2025-06-18T07:18:37+0000","dateStarted":"2025-06-18T09:47:46+0000","dateFinished":"2025-06-18T09:47:46+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2946"},{"text":"%pyspark\n\ntop_20_movies.limit(10).show()\n","user":"anonymous","dateUpdated":"2025-06-18T07:35:05+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+--------------------+----------+\n|               title|avg_rating|\n+--------------------+----------+\n|Marlene Dietrich:...|       5.0|\n|Great Day in Harl...|       5.0|\n|     Star Kid (1997)|       5.0|\n|Aiqing wansui (1994)|       5.0|\n|Someone Else's Am...|       5.0|\n|  Prefontaine (1997)|       5.0|\n|Saint of Fort Was...|       5.0|\n|Entertaining Ange...|       5.0|\n|They Made Me a Cr...|       5.0|\n|Santa with Muscle...|       5.0|\n+--------------------+----------+\n\n"}]},"apps":[],"jobName":"paragraph_1750231153180_-70014604","id":"20250618-071913_1305462980","dateCreated":"2025-06-18T07:19:13+0000","dateStarted":"2025-06-18T07:35:05+0000","dateFinished":"2025-06-18T07:35:07+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2947"},{"text":"%md\n### iii) Find the users who have rated at least 50 movies and identify their favourite movie genres.","user":"anonymous","dateUpdated":"2025-06-18T09:47:58+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>iii) Find the users who have rated at least 50 movies and identify their favourite movie genres.</h3>\n"}]},"apps":[],"jobName":"paragraph_1750231224934_-1274588434","id":"20250618-072024_360908304","dateCreated":"2025-06-18T07:20:24+0000","dateStarted":"2025-06-18T09:47:58+0000","dateFinished":"2025-06-18T09:47:58+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2948"},{"text":"%pyspark\r\n\r\nfrom pyspark.sql.functions import col, count, row_number\r\nfrom pyspark.sql.window import Window\r\n\r\n# Find users who rated at least 50 movies\r\nfiltered_users = readRatings.groupBy(\"user_id\").agg(count(\"*\").alias(\"num_ratings\")).filter(col(\"num_ratings\") >= 50).select(\"user_id\")\r\n\r\n# Combine ratings with filtered users and titles\r\nfiltered_ratings = readRatings.join(filtered_users, on=\"user_id\").join(readMovies, on=\"movieid\")\r\n\r\ngenre_cols = [\"unknown\", \"action\", \"adventure\", \"animation\", \"children\", \"comedy\", \"crime\",\r\n    \"documentary\", \"drama\", \"fantasy\", \"filmNoir\", \"horror\", \"musical\", \"mystery\",\r\n    \"romance\", \"sciFi\", \"thriller\", \"war\", \"western\"]\r\n\r\nuser_genres = None\r\nfor genre in genre_cols:\r\n    temp = filtered_ratings.filter(col(genre) == 1).select(\"user_id\").withColumn(\"genre\", F.lit(genre))\r\n    user_genres = temp if user_genres is None else user_genres.union(temp)\r\n\r\n# Find genre frequencies per user\r\nuser_genre_df = user_genres.groupBy(\"user_id\", \"genre\").agg(count(\"*\").alias(\"count\"))\r\n\r\n# Sort movie genres by popularity for each user\r\nwindowSpec = Window.partitionBy(\"user_id\").orderBy(col(\"count\").desc())\r\n\r\nsort_genres = user_genre_df.withColumn(\"rank\", row_number().over(windowSpec))\r\n\r\n# Find top genre per user\r\ntop_genres_per_user = sort_genres.filter(col(\"rank\") == 1).orderBy(col(\"count\").desc())\r\n\r\ntop_genres_per_user.select(\"user_id\", \"genre\", \"count\").show()\r\n","user":"anonymous","dateUpdated":"2025-06-18T09:37:11+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+------+-----+\n|user_id| genre|count|\n+-------+------+-----+\n|    655| drama|  410|\n|    405| drama|  309|\n|    537| drama|  251|\n|    450| drama|  237|\n|     13| drama|  218|\n|    234| drama|  213|\n|    416| drama|  212|\n|    279|comedy|  211|\n|    201| drama|  196|\n|    393|comedy|  191|\n|    181| drama|  188|\n|    303|comedy|  184|\n|    334| drama|  174|\n|     90| drama|  173|\n|    378| drama|  170|\n|    276| drama|  168|\n|    429| drama|  167|\n|    474| drama|  166|\n|    293| drama|  165|\n|    308| drama|  163|\n+-------+------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1750231513473_1249378031","id":"20250618-072513_1487028529","dateCreated":"2025-06-18T07:25:13+0000","dateStarted":"2025-06-18T09:37:11+0000","dateFinished":"2025-06-18T09:38:42+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2949"},{"text":"%md\n### iv) Find all the users who are less than 20 years old.","user":"anonymous","dateUpdated":"2025-06-18T09:48:06+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>iv) Find all the users who are less than 20 years old.</h3>\n"}]},"apps":[],"jobName":"paragraph_1750231567406_1712908510","id":"20250618-072607_1165531588","dateCreated":"2025-06-18T07:26:07+0000","dateStarted":"2025-06-18T09:48:06+0000","dateFinished":"2025-06-18T09:48:06+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2950"},{"text":"%pyspark\n\nlesstwenty = readUsers.filter(\"age < 20\")\n\nlesstwenty.show()\n","user":"anonymous","dateUpdated":"2025-06-18T09:44:46+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+---+------+----------+-----+\n|user_id|age|gender|occupation|  zip|\n+-------+---+------+----------+-----+\n|    618| 15|     F|   student|44212|\n|    471| 10|     M|   student|77459|\n|    580| 16|     M|   student|17961|\n|    262| 19|     F|   student|78264|\n|    880| 13|     M|   student|83702|\n|    632| 18|     M|   student|55454|\n|    541| 19|     F|   student|84302|\n|    453| 18|     M|   student|06333|\n|    223| 19|     F|   student|47906|\n|    462| 19|     F|   student|02918|\n|    550| 16|     F|   student|95453|\n|    289| 11|     M|      none|94619|\n|    142| 13|     M|     other|48118|\n|    482| 18|     F|   student|40256|\n|    303| 19|     M|   student|14853|\n|    101| 15|     M|   student|05146|\n|    872| 19|     F|   student|74078|\n|    601| 19|     F|    artist|99687|\n|    817| 19|     M|   student|60152|\n|    710| 19|     M|   student|92020|\n+-------+---+------+----------+-----+\nonly showing top 20 rows\n\n"}]},"apps":[],"jobName":"paragraph_1750236614894_1651257494","id":"20250618-085014_1005562409","dateCreated":"2025-06-18T08:50:14+0000","dateStarted":"2025-06-18T09:44:46+0000","dateFinished":"2025-06-18T09:44:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2951"},{"text":"%md\n### v) Find all the users whose occupation is “scientist” and whose age is between 30 and 40 years old.\n","user":"anonymous","dateUpdated":"2025-06-18T09:45:40+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<h3>v) Find all the users whose occupation is “scientist” and whose age is between 30 and 40 years old.</h3>\n"}]},"apps":[],"jobName":"paragraph_1750236814208_861042905","id":"20250618-085334_1524070904","dateCreated":"2025-06-18T08:53:34+0000","dateStarted":"2025-06-18T09:45:41+0000","dateFinished":"2025-06-18T09:45:41+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2952"},{"text":"%pyspark\n\nscientist3040 = readUsers.filter(\n    (col(\"age\") > 30) & (col(\"age\") < 40) & (col(\"occupation\") == \"scientist\"))\n    \nscientist3040.show()","user":"anonymous","dateUpdated":"2025-06-18T08:54:55+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-------+---+------+----------+-----+\n|user_id|age|gender|occupation|  zip|\n+-------+---+------+----------+-----+\n|     74| 39|     M| scientist|T8H1N|\n|    183| 33|     M| scientist|27708|\n|    107| 39|     M| scientist|60466|\n|    272| 33|     M| scientist|53706|\n|    430| 38|     M| scientist|98199|\n|    643| 39|     M| scientist|55122|\n|    543| 33|     M| scientist|95123|\n|    730| 31|     F| scientist|32114|\n|    337| 37|     M| scientist|10522|\n|    554| 32|     M| scientist|62901|\n|     40| 38|     M| scientist|27514|\n|     71| 39|     M| scientist|98034|\n|    874| 36|     M| scientist|37076|\n|    538| 31|     M| scientist|21010|\n+-------+---+------+----------+-----+\n\n"}]},"apps":[],"jobName":"paragraph_1750236875894_-1646072873","id":"20250618-085435_1984449661","dateCreated":"2025-06-18T08:54:35+0000","dateStarted":"2025-06-18T08:54:59+0000","dateFinished":"2025-06-18T08:55:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2953"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2025-06-18T08:54:55+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1750236895638_-1500237716","id":"20250618-085455_742059570","dateCreated":"2025-06-18T08:54:55+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:2954"}],"name":"STQD6324_Asg3_P151357","id":"2KYC1VRQY","angularObjects":{"2CHS8UYQQ:shared_process":[],"2C8A4SZ9T_livy2:shared_process":[],"2CK8A9MEG:shared_process":[],"2C4U48MY3_spark2:shared_process":[],"2CKAY1A8Y:shared_process":[],"2CKEKWY8Z:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}